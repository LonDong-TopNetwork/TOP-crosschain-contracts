const { expect } = require("chai");
const { call } = require('./helpers/call')
const hardhat = require('hardhat')
const { deployContract } = require('ethereum-waffle')
const { deployMockContract } = require('./helpers/deployMockContract')
const { AddressZero } = require("ethers").constants

const toWei = ethers.utils.parseEther

const overrides = { gasLimit: 9500000 }

describe('TopProver', () => {

  let wallet, wallet2,wallet3
  let topProver
  let topBridge

  beforeEach(async () => {
    [wallet, wallet2,wallet3] = await hardhat.ethers.getSigners()
    provider = hardhat.ethers.provider

    console.log("wallet>>>> "  + wallet.address)

    const TopBridge =  await hre.ethers.getContractFactory("TopPridgeTest", wallet, overrides)
    topBridge = await TopBridge.deploy()
    
    const TopProver =  await hre.ethers.getContractFactory("TopProverTest", wallet, overrides)
    topProver = await TopProver.deploy(topBridge.address)

  })

  describe('verifyHash', () => {
    it('There is no hash', async () => {
        await expect(topProver.verifyHash('0x0000000000000000000000000000000000000000000000000000000000000001')
        ).to.be.revertedWith('fail to decode')
    })

    it('There is hash', async () => {
      await topBridge.setBlockHashes('0x0000000000000000000000000000000000000000000000000000000000000001',true)
      let{valid,reason} = await topProver.verifyHash('0x0000000000000000000000000000000000000000000000000000000000000001');
    })

  })

  describe('getAddLightClientTime', () => {
    it('There is no height', async () => {
        await expect(topProver.getAddLightClientTime(2)
        ).to.be.revertedWith('Height is not confirmed1')
    })

    it('There is height', async () => {
      await topBridge.setBlockHeights(2,100)
      expect(await call(topProver,"getAddLightClientTime",2)).to.equal(100)
    })

  })

  describe('verify', () => {
    it('There is verify', async () => {
        await topProver.decode1('0x0200000000000000df000000f8dd94b2307365d76abb72f3ead8416e18b831a5ba26f0f884a056b161a6e4643e17140e8adce689a2b4dd38a651272b26645c7320a9284d7ab3a00000000000000000000000008efb4022ab31df76467c00ed839df1cc292528aca0000000000000000000000000868b65556dd27a034e066fd853c28a65527a3a93a0000000000000000000000000be202b3d086dc46c06a0710ff57ab4020df0f3fab84000000000000000000000000000000000000000000000000000000000000001f400000000000000000000000017110e0aa0056b6ffbfdff36865fa796fa1b47b501000000000000002803000002f9032401830174febf90219f89b948efb4022ab31df76467c00ed839df1cc292528acf863a08c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a0000000000000000000000000be202b3d086dc46c06a0710ff57ab4020df0f3faa0000000000000000000000000b2307365d76abb72f3ead8416e18b831a5ba26f0a00000000000000000000000000000000000000000000000000000000000000000f89b948efb4022ab31df76467c00ed839df1cc292528acf863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000be202b3d086dc46c06a0710ff57ab4020df0f3faa0000000000000000000000000b2307365d76abb72f3ead8416e18b831a5ba26f0a000000000000000000000000000000000000000000000000000000000000001f4f8dd94b2307365d76abb72f3ead8416e18b831a5ba26f0f884a056b161a6e4643e17140e8adce689a2b4dd38a651272b26645c7320a9284d7ab3a00000000000000000000000008efb4022ab31df76467c00ed839df1cc292528aca0000000000000000000000000868b65556dd27a034e066fd853c28a65527a3a93a0000000000000000000000000be202b3d086dc46c06a0710ff57ab4020df0f3fab84000000000000000000000000000000000000000000000000000000000000001f400000000000000000000000017110e0aa0056b6ffbfdff36865fa796fa1b47b561020000f9025ea00dbd446c62bce90bbf44004c8e8f7b2588a6d4ff6a4952388acfce6b739bcc94a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347940000000000000000000000000000000000000000a0502939ec77f44437c1784536ac44d45494483f0e8aeefd9bb85d468ede671428a08e304079dfaa3ed5d768832f6885d054388ffbf05c6bb6425df70fb786f9d345a0769f8a7b12197afef7d278286c2552702a2162ea9585060c7de3d6f4c7591ba6b901000c0000008980000000200000000004000000000001008400209942800800201400804000000000802000000800000000000010200214800a10000001802410000000204100000081204201880020001800210000400c004400000406000420a0810800000208000208010080224008050420000c500040000004001200400040208000040000000a40400c0060000100000000200004808000008040000000000208001015000020000803000004000000c083014000808400070208030101004004009600000c0200110088008410004240008000000048000081822000681000104800010110000008080000102001100000048480040020000840000084100183a6dd348401c9c380836ee62c8462bc0901b861d883010a11846765746888676f312e31372e38856c696e75780000000000000070b5510dbd321a4ddfa77ceabb6118eb3fa442c9184c21278ad813d2e50dab086f537edcb7befe8c381c72e3a47244154b4a2b94edec0a13841cbdcefd884eb201a00000000000000000000000000000000000000000000000000000000000000000880000000000000000270300000073000000f871a069602ef82e43fcb0582e8cb62b137c2ed835f3ab00824ca074bfbc8ad7652971a0c20f10f2d3af104484202693ee752ba86cba2d51a60eb0c1533d75819b23fba2808080808080a0a285ac733d66faf1a86338857a13b63a488470cdaf47076c8804e886371272478080808080808080f4010000f901f180a057f702b23503fa7af496711bfc807dc71d33861b066c388ade8a30d18c12be70a051c42e42534cde4908fc63342ab5f75b410e4e0d736caa98044e5852b2f924f0a09996a605feeef68554863018871cdaba434488c35efe6e3eba952dd6ecda0321a061ca73bfe0970c49f139bea4ecc13817e21704d72bb9d3e6b7e9ccae332e259ca058543135443c0424658c8bcffea8493994878bb7544ab1b5734022dd2b40dba9a0ec8907abfa69f5e6bf7a36c7fbabe61d049fd367520a950a8424d487fd51f360a090a6a4a5afa92595551b62ec34b8025b410aeba46540cb4d0139a7efd549a26aa01b384bbc9dd9e8dc9fe3b1b209ac6c8e6efdb77bbb4911eb02b3f7ab043a06b6a0290e6d3564b41d5bc26aa114add401267d0407a3082b819eaea0c010ef645f0ca03116b1cc1e87d98cfb7834461b267a64bb5c07c1588e66c1808adaa71a9b09cda0cb90a6dcbeb84adf3458815255fe1429dbdbc884877a2fd9e9cd018617366640a0112c65c67f03b6ce0bceb77fc606e38ea33999ef5c11a4ce495b1310426be911a0873eef51b32bbca33daf7406e4daab1a637e7369113caaef243a94cac7fafc0aa093b2e799497de1944e70b95ff1ed3af209a87adc0d6c8d55548a861dde7c1b2da0ba4c40680947b7356a119da3d73bd858d0d130c1e50f96256bfdbf92b8af8f64802f030000f9032c20b9032802f9032401830174febf90219f89b948efb4022ab31df76467c00ed839df1cc292528acf863a08c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a0000000000000000000000000be202b3d086dc46c06a0710ff57ab4020df0f3faa0000000000000000000000000b2307365d76abb72f3ead8416e18b831a5ba26f0a00000000000000000000000000000000000000000000000000000000000000000f89b948efb4022ab31df76467c00ed839df1cc292528acf863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000be202b3d086dc46c06a0710ff57ab4020df0f3faa0000000000000000000000000b2307365d76abb72f3ead8416e18b831a5ba26f0a000000000000000000000000000000000000000000000000000000000000001f4f8dd94b2307365d76abb72f3ead8416e18b831a5ba26f0f884a056b161a6e4643e17140e8adce689a2b4dd38a651272b26645c7320a9284d7ab3a00000000000000000000000008efb4022ab31df76467c00ed839df1cc292528aca0000000000000000000000000868b65556dd27a034e066fd853c28a65527a3a93a0000000000000000000000000be202b3d086dc46c06a0710ff57ab4020df0f3fab84000000000000000000000000000000000000000000000000000000000000001f400000000000000000000000017110e0aa0056b6ffbfdff36865fa796fa1b47b5')
        let data = await topProver.decode2('0x0200000000000000df000000f8dd94b2307365d76abb72f3ead8416e18b831a5ba26f0f884a056b161a6e4643e17140e8adce689a2b4dd38a651272b26645c7320a9284d7ab3a00000000000000000000000008efb4022ab31df76467c00ed839df1cc292528aca0000000000000000000000000868b65556dd27a034e066fd853c28a65527a3a93a0000000000000000000000000be202b3d086dc46c06a0710ff57ab4020df0f3fab84000000000000000000000000000000000000000000000000000000000000001f400000000000000000000000017110e0aa0056b6ffbfdff36865fa796fa1b47b501000000000000002803000002f9032401830174febf90219f89b948efb4022ab31df76467c00ed839df1cc292528acf863a08c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a0000000000000000000000000be202b3d086dc46c06a0710ff57ab4020df0f3faa0000000000000000000000000b2307365d76abb72f3ead8416e18b831a5ba26f0a00000000000000000000000000000000000000000000000000000000000000000f89b948efb4022ab31df76467c00ed839df1cc292528acf863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000be202b3d086dc46c06a0710ff57ab4020df0f3faa0000000000000000000000000b2307365d76abb72f3ead8416e18b831a5ba26f0a000000000000000000000000000000000000000000000000000000000000001f4f8dd94b2307365d76abb72f3ead8416e18b831a5ba26f0f884a056b161a6e4643e17140e8adce689a2b4dd38a651272b26645c7320a9284d7ab3a00000000000000000000000008efb4022ab31df76467c00ed839df1cc292528aca0000000000000000000000000868b65556dd27a034e066fd853c28a65527a3a93a0000000000000000000000000be202b3d086dc46c06a0710ff57ab4020df0f3fab84000000000000000000000000000000000000000000000000000000000000001f400000000000000000000000017110e0aa0056b6ffbfdff36865fa796fa1b47b561020000f9025ea00dbd446c62bce90bbf44004c8e8f7b2588a6d4ff6a4952388acfce6b739bcc94a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347940000000000000000000000000000000000000000a0502939ec77f44437c1784536ac44d45494483f0e8aeefd9bb85d468ede671428a08e304079dfaa3ed5d768832f6885d054388ffbf05c6bb6425df70fb786f9d345a0769f8a7b12197afef7d278286c2552702a2162ea9585060c7de3d6f4c7591ba6b901000c0000008980000000200000000004000000000001008400209942800800201400804000000000802000000800000000000010200214800a10000001802410000000204100000081204201880020001800210000400c004400000406000420a0810800000208000208010080224008050420000c500040000004001200400040208000040000000a40400c0060000100000000200004808000008040000000000208001015000020000803000004000000c083014000808400070208030101004004009600000c0200110088008410004240008000000048000081822000681000104800010110000008080000102001100000048480040020000840000084100183a6dd348401c9c380836ee62c8462bc0901b861d883010a11846765746888676f312e31372e38856c696e75780000000000000070b5510dbd321a4ddfa77ceabb6118eb3fa442c9184c21278ad813d2e50dab086f537edcb7befe8c381c72e3a47244154b4a2b94edec0a13841cbdcefd884eb201a00000000000000000000000000000000000000000000000000000000000000000880000000000000000270300000073000000f871a069602ef82e43fcb0582e8cb62b137c2ed835f3ab00824ca074bfbc8ad7652971a0c20f10f2d3af104484202693ee752ba86cba2d51a60eb0c1533d75819b23fba2808080808080a0a285ac733d66faf1a86338857a13b63a488470cdaf47076c8804e886371272478080808080808080f4010000f901f180a057f702b23503fa7af496711bfc807dc71d33861b066c388ade8a30d18c12be70a051c42e42534cde4908fc63342ab5f75b410e4e0d736caa98044e5852b2f924f0a09996a605feeef68554863018871cdaba434488c35efe6e3eba952dd6ecda0321a061ca73bfe0970c49f139bea4ecc13817e21704d72bb9d3e6b7e9ccae332e259ca058543135443c0424658c8bcffea8493994878bb7544ab1b5734022dd2b40dba9a0ec8907abfa69f5e6bf7a36c7fbabe61d049fd367520a950a8424d487fd51f360a090a6a4a5afa92595551b62ec34b8025b410aeba46540cb4d0139a7efd549a26aa01b384bbc9dd9e8dc9fe3b1b209ac6c8e6efdb77bbb4911eb02b3f7ab043a06b6a0290e6d3564b41d5bc26aa114add401267d0407a3082b819eaea0c010ef645f0ca03116b1cc1e87d98cfb7834461b267a64bb5c07c1588e66c1808adaa71a9b09cda0cb90a6dcbeb84adf3458815255fe1429dbdbc884877a2fd9e9cd018617366640a0112c65c67f03b6ce0bceb77fc606e38ea33999ef5c11a4ce495b1310426be911a0873eef51b32bbca33daf7406e4daab1a637e7369113caaef243a94cac7fafc0aa093b2e799497de1944e70b95ff1ed3af209a87adc0d6c8d55548a861dde7c1b2da0ba4c40680947b7356a119da3d73bd858d0d130c1e50f96256bfdbf92b8af8f64802f030000f9032c20b9032802f9032401830174febf90219f89b948efb4022ab31df76467c00ed839df1cc292528acf863a08c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a0000000000000000000000000be202b3d086dc46c06a0710ff57ab4020df0f3faa0000000000000000000000000b2307365d76abb72f3ead8416e18b831a5ba26f0a00000000000000000000000000000000000000000000000000000000000000000f89b948efb4022ab31df76467c00ed839df1cc292528acf863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000be202b3d086dc46c06a0710ff57ab4020df0f3faa0000000000000000000000000b2307365d76abb72f3ead8416e18b831a5ba26f0a000000000000000000000000000000000000000000000000000000000000001f4f8dd94b2307365d76abb72f3ead8416e18b831a5ba26f0f884a056b161a6e4643e17140e8adce689a2b4dd38a651272b26645c7320a9284d7ab3a00000000000000000000000008efb4022ab31df76467c00ed839df1cc292528aca0000000000000000000000000868b65556dd27a034e066fd853c28a65527a3a93a0000000000000000000000000be202b3d086dc46c06a0710ff57ab4020df0f3fab84000000000000000000000000000000000000000000000000000000000000001f400000000000000000000000017110e0aa0056b6ffbfdff36865fa796fa1b47b5')
        console.log(JSON.stringify(data))

    })
  })

})
